{"version":3,"sources":["components/RestaurantsListItem/RestaurantsListItem.tsx","components/Search/Search.tsx","constants/states.tsx","constants/genres.tsx","components/Restaurants/Restaurants.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RestaurantsListItem","index","restaurant","name","city","state","telephone","genre","Search","search","onSearch","React","useState","searchString","setsearchString","useEffect","handleSearch","className","onSubmit","e","preventDefault","id","type","placeholder","style","padding","margin","onChange","text","target","value","states","genres","defaultRestaurants","Restaurants","props","restaurants","setRestaurants","loading","setLoading","error","setError","stateFilter","setstateFilter","genreFilter","setgenreFilter","pageNum","setpageNum","dropDownStates","map","Dropdown","Item","eventKey","dropDownGenres","axios","get","headers","then","response","data","sort","a","b","catch","ex","status","str","handleStateFilter","handleGenreFilter","listItems","filter","listItem","toLowerCase","indexOf","toString","items","number","push","Pagination","onClick","page","window","scrollTo","length","paginatedListItems","slice","textAlign","DropdownButton","alignRight","title","onSelect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAsBeA,G,MAbmC,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,WACvD,OACI,+BACI,+BAAKD,EAAQ,EAAb,UAAuBC,EAAWC,QAClC,6BAAKD,EAAWE,OAChB,6BAAKF,EAAWG,QAChB,6BAAKH,EAAWI,YAChB,6BAAKJ,EAAWK,aCwBbC,G,MA/BkB,SAAC,GAAmD,EAAlDC,OAAmD,IAA3CC,EAA0C,EAA1CA,SAA0C,EAECC,IAAMC,SACpF,IAH6E,mBAE1EC,EAF0E,KAE5DC,EAF4D,KAMjFC,qBAAU,WACNC,OAGJ,IAAMA,EAAe,WACjBN,EAASG,IAGb,OACI,qBAAKI,UAAU,gCAAf,SACI,sBAAMA,UAAU,aAAcC,SAAU,SAACC,GAAQA,EAAEC,kBAAnD,SACI,uBACIC,GAAG,eACHC,KAAK,OACLL,UAAU,eACVM,YAAY,SACZC,MAAO,CAAEC,QAAS,GAAIC,OAAQ,IAC9BC,SAAU,SAACC,GAAWd,EAAgBc,EAAKC,OAAOC,gBC+BvDC,EA/DA,CACX,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,M,gBCxBWC,EApCA,CACX,MACA,WACA,QACA,SACA,UACA,SACA,OACA,SACA,eACA,cACA,WACA,WACA,SACA,SACA,QACA,WACA,gBACA,QACA,UACA,SACA,WACA,UACA,cACA,QACA,aACA,aACA,UACA,QACA,QACA,MACA,cACA,aACA,I,QCpBEC,EAAmC,GAkO1BC,EA/NS,SAACC,GAAyB,IAAD,EAE8CxB,IAAMC,SAC7FqB,GAHyC,mBAEtCG,EAFsC,KAEzBC,EAFyB,OASzC1B,IAAMC,UAAkB,GATiB,mBAMtC0B,EANsC,KAM7BC,EAN6B,OAWgB5B,IAAMC,SAC/D,IAZyC,mBAWtC4B,EAXsC,KAW/BC,EAX+B,OAeqC9B,IAAMC,SACpF,IAhByC,mBAetCC,EAfsC,KAexBC,EAfwB,OAmBkCH,IAAMC,SACjF,OApByC,mBAmBtC8B,EAnBsC,KAmBzBC,EAnByB,OAuBkChC,IAAMC,SACjF,OAxByC,mBAuBtCgC,EAvBsC,KAuBzBC,EAvByB,OA2ByBlC,IAAMC,SACxE,GA5ByC,mBA2BtCkC,EA3BsC,KA2B7BC,EA3B6B,KA+BvCC,EAAiBjB,EAAOkB,KAAI,SAAC5C,EAAOJ,GACtC,OAAO,cAACiD,EAAA,EAASC,KAAV,CAAeC,SAAU/C,EAAzB,SAAiCA,OAGtCgD,EAAiBrB,EAAOiB,KAAI,SAAC1C,EAAON,GACtC,OAAO,cAACiD,EAAA,EAASC,KAAV,CAAeC,SAAU7C,EAAzB,SAAiCA,OAG5CI,IAAMI,WAAU,WACZuC,IACKC,IAAkB,6DAA8D,CAC7EC,QAAS,CACL,eAAgB,mBAChB,cAAiB,0BAGxBC,MAAK,SAACC,GAEHA,EAASC,KAAKC,MAAK,SAAUC,EAAGC,GAC5B,OAAID,EAAE1D,KAAO2D,EAAE3D,MAAgB,EAC3B0D,EAAE1D,KAAO2D,EAAE3D,KAAe,EACvB,KAEXkC,EAAeqB,EAASC,MACxBpB,GAAW,MAEdwB,OAAM,SAAAC,GACH,IAAMxB,EACqB,MAAvBwB,EAAGN,SAASO,OACN,qBACA,mCACVxB,EAASD,GACTD,GAAW,QAEpB,IAIH,IAAMvB,EAAe,SAACkD,GACP,MAAPA,IAAaA,EAAM,IACvBpD,EAAgBoD,IAGdC,EAAoB,SAACD,GACZ,MAAPA,IAAaA,EAAM,IACvBvB,EAAeuB,IAGbE,EAAoB,SAACF,GACZ,MAAPA,IAAaA,EAAM,IACvBrB,EAAeqB,IAQnB,GAAI5B,EAAS,OAAO,2CACf,GAAc,KAAVE,EAAc,OAAO,4BAAIA,IAG9B,IAAI6B,EAAY,GAQZA,EANiB,KAAjBxD,GAAwC,KAAhB6B,GAAsC,QAAhBA,GAA2C,KAAhBE,GAAsC,QAAhBA,EAMnFR,EAAYkC,QAAO,SAAAC,GAAQ,OAId,KAAjB1D,GACA0D,EAASpE,KAAKqE,cAAcC,QAAQ5D,EAAa2D,gBAAkB,GACnED,EAASnE,KAAKoE,cAAcC,QAAQ5D,EAAa2D,gBAAkB,GACnED,EAAShE,MAAMiE,cAAcC,QAAQ5D,EAAa2D,gBAAkB,KAMpD,QAAhB9B,GACA6B,EAASlE,MAAMmE,cAAcC,QAAQ/B,EAAY8B,gBAAkB,KAMnD,QAAhB5B,GACA2B,EAAShE,MAAMiE,cAAcC,QAAQ7B,EAAY4B,gBAAkB,MAIzEvB,KAAI,SAACsB,EAAUtE,GACb,OAAO,cAAC,EAAD,CAAqBA,MAAOA,EAA2CC,WAAYqE,GAA3CA,EAASjE,UAAUoE,eA/B1DtC,EAAYa,KAAI,SAACsB,EAAUtE,GACnC,OAAO,cAAC,EAAD,CAAqBA,MAAOA,EAA2CC,WAAYqE,GAA3CA,EAASjE,UAAUoE,eAmC1E,IADA,IAAIC,EAAQ,GAxCX,WAyCQC,GACLD,EAAME,KACF,cAACC,EAAA,EAAW3B,KAAZ,CAA8B4B,QAAS,WAlD1B,IAACC,IAkDiDJ,EAjDvEK,OAAOC,SAAS,EAAG,GACnBnC,EAAWiC,EAAO,IAgDV,SACKJ,GADiBA,KAFrBA,EAAS,EAAGA,GAAUP,EAAUc,OAAS,GAAK,EAAGP,IAAW,EAA5DA,GAQT,IAAIQ,EAAqBf,EAAUgB,MAAiB,GAAVvC,EAAyB,GAAVA,EAAgB,IAEzE,OAAyB,IAArBuB,EAAUc,OACF,sBAAK3D,MAAO,CAAC8D,UAAW,UAAxB,UACJ,cAAC,EAAD,CAAQ7E,OAAO,GAAGC,SAAUM,IAC5B,kCACI,gCACI,+BACI,sCACA,sCACA,6BACI,cAACuE,EAAA,EAAD,CACIC,YAAU,EACVC,MAAO,UAAY/C,EACnBrB,GAAG,4BACHqE,SAAUvB,EAJd,SAMKnB,MAGT,uCACA,6BACI,cAACuC,EAAA,EAAD,CACIC,YAAU,EACVC,MAAO,UAAY7C,EACnBvB,GAAG,4BACHqE,SAAUtB,EAJd,SAMKf,WAKjB,gCAAQgB,OA9BR,oCAgC8B3B,EAhC9B,oBAgC4DE,EAhC5D,QAsCR,gCACI,cAAC,EAAD,CAAQnC,OAAO,GAAGC,SAAUM,IAC5B,kCACI,gCACI,+BACI,sCACA,sCACA,6BACI,cAACuE,EAAA,EAAD,CACIC,YAAU,EACVC,MAAO,UAAY/C,EACnBrB,GAAG,4BACHqE,SAAUvB,EAJd,SAMKnB,MAGT,uCACA,6BACI,cAACuC,EAAA,EAAD,CACIC,YAAU,EACVC,MAAO,UAAY7C,EACnBvB,GAAG,4BACHqE,SAAUtB,EAJd,SAMKf,WAKhB+B,EAAmBD,OAAS,GAAK,EAAI,GAClC,gCAAQC,OAIhB,cAACN,EAAA,EAAD,UAAaH,Q,MC1NdgB,MARf,WACE,OACE,qBAAK1E,UAAU,YAAf,SACE,cAAC,EAAD,OCKS2E,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e0b7b61d.chunk.js","sourcesContent":["import React, {FC, ReactElement} from 'react';\nimport './RestaurantsListItem.css'\nimport Restaurant from '../../model/Restaurant';\n\ninterface RestaurantProps {\n    index: number;\n    restaurant: Restaurant;\n}\n\nconst RestaurantsListItem : FC<RestaurantProps> = ({index, restaurant}: RestaurantProps) : ReactElement => {\n    return(\n        <tr>\n            <td>{index + 1}.&ensp;{restaurant.name}</td>\n            <td>{restaurant.city}</td>\n            <td>{restaurant.state}</td>\n            <td>{restaurant.telephone}</td>\n            <td>{restaurant.genre}</td>\n        </tr>\n    );\n\n}\n\nexport default RestaurantsListItem;","import React, {FC, ReactElement, useEffect} from 'react';\nimport './Search.css'\n\n\ninterface SearchProps {\n    search: string;\n    onSearch: Function;\n}\n\nconst Search : FC<SearchProps> = ({search, onSearch}: SearchProps) : ReactElement => {\n\n    const [searchString, setsearchString]: [string, (searchString: string) => void] = React.useState(\n        ''\n    );\n\n    useEffect(() => {\n        handleSearch();\n    })\n\n    const handleSearch = () => {\n        onSearch(searchString);\n    }\n\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <form className=\"form-group\"  onSubmit={(e) => { e.preventDefault(); }}>\n                <input\n                    id='search-input'\n                    type='text'\n                    className='form-control'\n                    placeholder='Search'\n                    style={{ padding: 20, margin: 10 }}\n                    onChange={(text) => { setsearchString(text.target.value); }}\n                />\n            </form>\n        </div>\n    )\n\n}\n\nexport default Search;","const states = [\n    \"ALL\",\n    \"AL\",\n    \"AK\",\n    \"AS\",\n    \"AZ\",\n    \"AR\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DE\",\n    \"DC\",\n    \"FM\",\n    \"FL\",\n    \"GA\",\n    \"GU\",\n    \"HI\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"IA\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"ME\",\n    \"MH\",\n    \"MD\",\n    \"MA\",\n    \"MI\",\n    \"MN\",\n    \"MS\",\n    \"MO\",\n    \"MT\",\n    \"NE\",\n    \"NV\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NY\",\n    \"NC\",\n    \"ND\",\n    \"MP\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PW\",\n    \"PA\",\n    \"PR\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VT\",\n    \"VI\",\n    \"VA\",\n    \"WA\",\n    \"WV\",\n    \"WI\",\n    \"WY\"\n]\n\nexport default states;\n","const genres = [\n    \"ALL\",\n    \"American\",\n    \"Asian\",\n    \"Bakery\",\n    \"Belgian\",\n    \"Bistro\",\n    \"Cafe\",\n    \"Coffee\",\n    \"Contemporary\",\n    \"Continental\",\n    \"Eclectic\",\n    \"European\",\n    \"French\",\n    \"Fusion\",\n    \"Grill\",\n    \"Hawaiian\",\n    \"International\",\n    \"Irish\",\n    \"Italian\",\n    \"Kosher\",\n    \"Japanese\",\n    \"Oysters\",\n    \"Pacific Rim\",\n    \"Pasta\",\n    \"Polynesian\",\n    \"Sandwiches\",\n    \"Seafood\",\n    \"Steak\",\n    \"Sushi\",\n    \"Tea\",\n    \"Traditional\",\n    \"Vegetarian\",\n    \"\"\n]\n\nexport default genres;","import React, { FC, ReactElement } from 'react';\nimport './Restaurants.css';\nimport axios from 'axios';\nimport Restaurant from '../../model/Restaurant';\nimport RestaurantsListItem from '../RestaurantsListItem/RestaurantsListItem';\nimport Search from '../Search/Search';\nimport states from '../../constants/states';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport genres from '../../constants/genres';\nimport Pagination from 'react-bootstrap/Pagination'\n\n\nconst defaultRestaurants: Restaurant[] = [];\n\n\nconst Restaurants: FC = (props): ReactElement => {\n\n    const [restaurants, setRestaurants]: [Restaurant[], (restaurants: Restaurant[]) => void] = React.useState(\n        defaultRestaurants\n    );\n\n    const [loading, setLoading]: [\n        boolean,\n        (loading: boolean) => void\n    ] = React.useState<boolean>(true);\n\n    const [error, setError]: [string, (error: string) => void] = React.useState(\n        ''\n    );\n\n    const [searchString, setsearchString]: [string, (searchString: string) => void] = React.useState(\n        ''\n    );\n\n    const [stateFilter, setstateFilter]: [string, (stateFilter: string) => void] = React.useState(\n        'ALL'\n    );\n\n    const [genreFilter, setgenreFilter]: [string, (genreFilter: string) => void] = React.useState(\n        'ALL'\n    );\n\n    const [pageNum, setpageNum]: [number, (setpageNum: number) => void] = React.useState(\n        0\n    );\n\n    const dropDownStates = states.map((state, index) => {\n        return <Dropdown.Item eventKey={state}>{state}</Dropdown.Item>\n    })\n\n    const dropDownGenres = genres.map((genre, index) => {\n        return <Dropdown.Item eventKey={genre}>{genre}</Dropdown.Item>\n    })\n\n    React.useEffect(() => {\n        axios\n            .get<Restaurant[]>(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Api-Key q3MNxtfep8Gt\"\n                }\n            })\n            .then((response) => {\n                // Sort alphabetically\n                response.data.sort(function (a, b) {\n                    if (a.name < b.name) { return -1; }\n                    if (a.name > b.name) { return 1; }\n                    return 0;\n                })\n                setRestaurants(response.data);\n                setLoading(false);\n            })\n            .catch(ex => {\n                const error =\n                    ex.response.status === 404\n                        ? \"Resource not found\"\n                        : \"An unexpected error has occurred\";\n                setError(error);\n                setLoading(false);\n            });\n    }, []);\n\n    //   console.log(restaurants[0]);\n\n    const handleSearch = (str: string) => {\n        if (str == null) str = '';\n        setsearchString(str);\n    }\n\n    const handleStateFilter = (str: any) => {\n        if (str == null) str = '';\n        setstateFilter(str);\n    }\n\n    const handleGenreFilter = (str: any) => {\n        if (str == null) str = '';\n        setgenreFilter(str);\n    }\n\n    const handlePagination = (page: number) => {\n        window.scrollTo(0, 0);\n        setpageNum(page - 1);\n    }\n\n    if (loading) return <p>Loading...</p>\n    else if (error !== '') return <p>{error}</p>\n    else {\n\n        var listItems = [];\n\n        if (searchString === '' && (stateFilter === '' || stateFilter === 'ALL') && (genreFilter === '' || genreFilter === 'ALL')) {\n            listItems = restaurants.map((listItem, index) => {\n                return <RestaurantsListItem index={index} key={listItem.telephone.toString()} restaurant={listItem}></RestaurantsListItem>\n            })\n        }\n        else {\n            listItems = restaurants.filter(listItem =>\n\n            (\n                (\n                    searchString === '' ||\n                    listItem.name.toLowerCase().indexOf(searchString.toLowerCase()) > -1 ||\n                    listItem.city.toLowerCase().indexOf(searchString.toLowerCase()) > -1 ||\n                    listItem.genre.toLowerCase().indexOf(searchString.toLowerCase()) > -1\n                )\n\n                &&\n\n                (\n                    stateFilter === 'ALL' ||\n                    listItem.state.toLowerCase().indexOf(stateFilter.toLowerCase()) > -1\n                )\n\n                &&\n\n                (\n                    genreFilter === 'ALL' ||\n                    listItem.genre.toLowerCase().indexOf(genreFilter.toLowerCase()) > -1\n                )\n\n            )\n            ).map((listItem, index) => {\n                return <RestaurantsListItem index={index} key={listItem.telephone.toString()} restaurant={listItem}></RestaurantsListItem>\n            })\n        }\n\n        let items = [];\n        for (let number = 1; number <= listItems.length / 10 + 1; number++) {\n            items.push(\n                <Pagination.Item key={number} onClick={() => {handlePagination(number)}}>\n                    {number}\n                </Pagination.Item>,\n            );\n        }\n\n        var paginatedListItems = listItems.slice( pageNum * 10, (pageNum * 10) + 10);\n\n        if (listItems.length === 0) {\n            return (<div style={{textAlign: \"center\"}}>\n                <Search search='' onSearch={handleSearch}></Search>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>City</th>\n                            <th>\n                                <DropdownButton\n                                    alignRight\n                                    title={`State: ` + stateFilter}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleStateFilter}\n                                >\n                                    {dropDownStates}\n                                </DropdownButton>\n                            </th>\n                            <th>Phone</th>\n                            <th>\n                                <DropdownButton\n                                    alignRight\n                                    title={`Genre: ` + genreFilter}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleGenreFilter}\n                                >\n                                    {dropDownGenres}\n                                </DropdownButton>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>{listItems}</tbody>\n                </table>\n                No results were found for state \"{stateFilter}\" and for genre \"{genreFilter}\".\n            </div>\n            );\n        }\n\n        return (\n            <div>\n                <Search search='' onSearch={handleSearch}></Search>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>City</th>\n                            <th>\n                                <DropdownButton\n                                    alignRight\n                                    title={`State: ` + stateFilter}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleStateFilter}\n                                >\n                                    {dropDownStates}\n                                </DropdownButton>\n                            </th>\n                            <th>Phone</th>\n                            <th>\n                                <DropdownButton\n                                    alignRight\n                                    title={`Genre: ` + genreFilter}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleGenreFilter}\n                                >\n                                    {dropDownGenres}\n                                </DropdownButton>\n                            </th>\n                        </tr>\n                    </thead>\n                    {paginatedListItems.length / 10 + 1 > 1 &&\n                        <tbody>{paginatedListItems}</tbody>\n                    }\n                </table>\n\n                <Pagination>{items}</Pagination>\n            </div>\n        );\n    };\n\n}\n\nexport default Restaurants;","import React from 'react';\nimport './App.css';\nimport Restaurants from './components/Restaurants/Restaurants';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Restaurants></Restaurants>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}